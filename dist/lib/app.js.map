{"version":3,"sources":["../../tmp/lib/app.js"],"names":["init","noop","undefined","DataLoader","callback","data","githubInfo","window","fetch","then","response","json","apiData","Array","isArray","length","listener","App","dataLoader","get","JSON","parse","stringify","repositories","sort","repo1","repo2","output","stargazers_count","forks_count","index","fork","ownerInfo","owner","app","startup","loadData","onDataLoaded","console","log","document","addEventListener","setTimeout"],"mappings":"wpBAAC,SAASA,KAAT,EAAgB,CACb,aAEA,GAAMC,MAAO,QAAPA,KAAO,EAAY,CACrB,MAAOC,UACV,CAFD,CAHa,GAOPC,WAPO,YAQT,qBAAc,iDACV,KAAKC,QAAL,CAAgBH,IAAhB,CAEA,KAAKI,IAAL,CAAY,CACRC,WAAaC,OAAOD,UAAP,EAAqB,EAD1B,CAAZ,CAIAE,MAAM,wEAAN,EAAgFC,IAAhF,CAAqF,SAAUC,QAAV,CAAoB,CACrG,MAAOA,UAASC,IAAT,EACV,CAFD,EAEGF,IAFH,CAEQ,SAACG,OAAD,CAAa,CACjB,GAAIA,SAAWC,MAAMC,OAAN,CAAcF,OAAd,CAAX,EAAqCA,QAAQG,MAAjD,CAAyD,CACrD,MAAKV,IAAL,CAAUC,UAAV,CAAuBM,OAAvB,CACA,MAAKR,QAAL,CAAc,MAAKC,IAAnB,CACH,CACJ,CAPD,CAQH,CAvBQ,uDAyBLW,QAzBK,CAyBK,CACV,KAAKZ,QAAL,CAAgBY,QAAhB,CAEA,KAAKZ,QAAL,CAAc,KAAKC,IAAnB,CACH,CA7BQ,4BAgCPY,IAhCO,YAiCT,cAAc,2BACV,KAAKC,UAAL,CAAkB,GAAIf,WACzB,CAnCQ,0DAqCAC,QArCA,CAqCU,iBACf,KAAKc,UAAL,CAAgBC,GAAhB,CAAoB,SAACd,IAAD,CAAU,CAC1B;AACAA,KAAOe,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAejB,KAAKC,UAApB,CAAX,CAAP,CAEA,OAAKiB,YAAL,CAAoBlB,KAAKmB,IAAL,CAAU,SAAUC,KAAV,CAAiBC,KAAjB,CAAwB,CAClD,GAAIC,QAASD,MAAME,gBAAN,CAAyBH,MAAMG,gBAA5C,CAEA,GAAI,CAACD,MAAL,CAAa,CACTA,OAASD,MAAMG,WAAN,CAAoBJ,MAAMI,WACtC,CAED,MAAOF,OACV,CARmB,CAApB,CAUA,IAAK,GAAIG,OAAQ,CAAjB,CAAoBA,MAAQ,OAAKP,YAAL,CAAkBR,MAA9C,CAAsDe,OAAtD,CAA+D,CAC3D,GAAI,CAAC,OAAKP,YAAL,CAAkBO,KAAlB,EAAyBC,IAA9B,CAAoC,CAChC,OAAKC,SAAL,CAAiB,OAAKT,YAAL,CAAkBO,KAAlB,EAAyBG,KAA1C,CACA,KACH,CACJ,CAED7B,UACH,CAtBD,CAuBH,CA7DQ,kBAgEb,GAAI8B,WAAJ,CACA,GAAMC,SAAU,QAAVA,QAAU,EAAY,CACxB,GAAI,CAACD,GAAL,CAAU,CACNA,IAAM,GAAIjB,IAAV,CACAiB,IAAIE,QAAJ,CAAa,QAASC,aAAT,EAAwB,CACjCC,QAAQC,GAAR,CAAY,CACRP,UAAWE,IAAIF,SADP,CAERT,aAAcW,IAAIX,YAFV,CAAZ,CAIH,CALD,CAMH,CACJ,CAVD,CAYAiB,SAASC,gBAAT,CAA0B,iBAA1B,CAA6CN,OAA7C,EACAO,WAAWP,OAAX,CAAoB,CAApB,CACH,CA/EA,GAAD,CAiFA","file":"app.js","sourcesContent":["(function init() {\n    'use strict';\n\n    const noop = function () {\n        return undefined;\n    };\n\n    class DataLoader {\n        constructor() {\n            this.callback = noop;\n\n            this.data = {\n                githubInfo: (window.githubInfo || [])\n            };\n\n            fetch('https://api.github.com/users/sagiegurari/repos?type=owner&per_page=100').then(function (response) {\n                return response.json();\n            }).then((apiData) => {\n                if (apiData && Array.isArray(apiData) && apiData.length) {\n                    this.data.githubInfo = apiData;\n                    this.callback(this.data);\n                }\n            });\n        }\n\n        get(listener) {\n            this.callback = listener;\n\n            this.callback(this.data);\n        }\n    }\n\n    class App {\n        constructor() {\n            this.dataLoader = new DataLoader();\n        }\n\n        loadData(callback) {\n            this.dataLoader.get((data) => {\n                //clone data\n                data = JSON.parse(JSON.stringify(data.githubInfo));\n\n                this.repositories = data.sort(function (repo1, repo2) {\n                    let output = repo2.stargazers_count - repo1.stargazers_count;\n\n                    if (!output) {\n                        output = repo2.forks_count - repo1.forks_count;\n                    }\n\n                    return output;\n                });\n\n                for (let index = 0; index < this.repositories.length; index++) {\n                    if (!this.repositories[index].fork) {\n                        this.ownerInfo = this.repositories[index].owner;\n                        break;\n                    }\n                }\n\n                callback();\n            });\n        }\n    }\n\n    let app;\n    const startup = function () {\n        if (!app) {\n            app = new App();\n            app.loadData(function onDataLoaded() {\n                console.log({\n                    ownerInfo: app.ownerInfo,\n                    repositories: app.repositories\n                });\n            });\n        }\n    };\n\n    document.addEventListener('DOMContentReady', startup);\n    setTimeout(startup, 0);\n}());\n\n//# sourceMappingURL=app.js.map"]}