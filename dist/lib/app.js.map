{"version":3,"sources":["../../tmp/lib/app.js"],"names":["init","noop","undefined","DataLoader","callback","data","githubInfo","window","fetch","then","response","json","apiData","Array","isArray","length","listener","App","dataLoader","console","log","get","app","startup","loadData","onDataLoaded","document","addEventListener"],"mappings":"wpBAAA,CAAC,QAASA,KAAT,EAAgB,CACb,aAEA,GAAMC,MAAO,QAAPA,KAAO,EAAW,CACpB,MAAOC,UACV,CAFD,CAHa,GAOPC,WAPO,YAQT,qBAAc,iDACV,KAAKC,QAAL,CAAgBH,IAAhB,CAEA,KAAKI,IAAL,CAAY,CACRC,WAAaC,OAAOD,UAAP,EAAqB,EAD1B,CAAZ,CAIAE,MAAM,wEAAN,EAAgFC,IAAhF,CAAqF,SAASC,QAAT,CAAmB,CACpG,MAAOA,UAASC,IAAT,EACV,CAFD,EAEGF,IAFH,CAEQ,SAACG,OAAD,CAAa,CACjB,GAAIA,SAAWC,MAAMC,OAAN,CAAcF,OAAd,CAAX,EAAqCA,QAAQG,MAAjD,CAAyD,CACrD,MAAKV,IAAL,CAAUC,UAAV,CAAuBM,OAAvB,CACA,MAAKR,QAAL,CAAc,MAAKC,IAAnB,CACH,CACJ,CAPD,CAQH,CAvBQ,uDAyBLW,QAzBK,CAyBK,CACV,KAAKZ,QAAL,CAAgBY,QAAhB,CAEA,KAAKZ,QAAL,CAAc,KAAKC,IAAnB,CACH,CA7BQ,4BAgCPY,IAhCO,YAiCT,cAAc,2BACV,KAAKC,UAAL,CAAkB,GAAIf,WAAtB,CAEAgB,QAAQC,GAAR,CAAY,mCAAZ,CACH,CArCQ,0DAuCAhB,QAvCA,CAuCU,CACf,KAAKc,UAAL,CAAgBG,GAAhB,CAAoBjB,QAApB,CACH,CAzCQ,kBA4Cb,GAAIkB,WAAJ,CACA,GAAMC,SAAU,QAAVA,QAAU,EAAW,CACvB,GAAI,CAACD,GAAL,CAAU,CACNA,IAAM,GAAIL,IAAV,CACAK,IAAIE,QAAJ,CAAa,QAASC,aAAT,CAAsBpB,IAAtB,CAA4B,CACrCc,QAAQC,GAAR,CAAYf,IAAZ,CACH,CAFD,CAGH,CACJ,CAPD,CAQAqB,SAASC,gBAAT,CAA0B,iBAA1B,CAA6CJ,OAA7C,EACAA,SACH,CAvDD,IAyDA","file":"app.js","sourcesContent":["(function init() {\n    'use strict';\n\n    const noop = function() {\n        return undefined;\n    }\n\n    class DataLoader {\n        constructor() {\n            this.callback = noop;\n\n            this.data = {\n                githubInfo: (window.githubInfo || [])\n            };\n\n            fetch('https://api.github.com/users/sagiegurari/repos?type=owner&per_page=100').then(function(response) {\n                return response.json();\n            }).then((apiData) => {\n                if (apiData && Array.isArray(apiData) && apiData.length) {\n                    this.data.githubInfo = apiData;\n                    this.callback(this.data);\n                }\n            });\n        }\n\n        get(listener) {\n            this.callback = listener;\n\n            this.callback(this.data);\n        }\n    }\n\n    class App {\n        constructor() {\n            this.dataLoader = new DataLoader();\n\n            console.log('Created new application instance.');\n        }\n\n        loadData(callback) {\n            this.dataLoader.get(callback);\n        }\n    }\n\n    let app;\n    const startup = function() {\n        if (!app) {\n            app = new App();\n            app.loadData(function onDataLoaded(data) {\n                console.log(data);\n            });\n        }\n    };\n    document.addEventListener('DOMContentReady', startup);\n    startup();\n})();\n\n//# sourceMappingURL=app.js.map"]}