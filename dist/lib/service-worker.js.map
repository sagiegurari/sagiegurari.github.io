{"version":3,"sources":["../../lib/service-worker.js"],"names":["CACHE_VERSION","CURRENT_CACHES","resources","data","app","appModule","deleteOldCache","expectedCacheNames","Object","keys","map","key","deleteOldCaches","cacheNames","cacheName","indexOf","caches","delete","undefined","then","Promise","all","self","addEventListener","event","waitUntil"],"mappings":"aAAC,WAAY,CACT,aAEA,GAAMA,eAAgB,CAAtB,CACA,GAAMC,gBAAiB,CACnBC,UAAW,cAAgBF,aADR,CAEnBG,KAAM,SAAWH,aAFE,CAAvB,CAKA,GAAMI,KAAO,UAAY,CACrB,GAAMC,WAAY,CACdC,cADc,0BACG,CACb,GAAMC,oBAAqBC,OAAOC,IAAP,CAAYR,cAAZ,EAA4BS,GAA5B,CAAgC,SAAUC,GAAV,CAAe,CACtE,MAAOV,gBAAeU,GAAf,CACV,CAF0B,CAA3B,CAIA,GAAMC,iBAAkB,QAAlBA,gBAAkB,CAAUC,UAAV,CAAsB,CAC1C,MAAOA,YAAWH,GAAX,CAAe,SAAUI,SAAV,CAAqB,CACvC,GAAIP,mBAAmBQ,OAAnB,CAA2BD,SAA3B,IAA0C,CAAC,CAA/C,CAAkD,CAC9C,MAAOE,QAAOC,MAAP,CAAcH,SAAd,CACV,CAED,MAAOI,UACV,CANM,CAOV,CARD,CAUA,MAAOF,QAAOP,IAAP,GAAcU,IAAd,CAAmB,SAAUN,UAAV,CAAsB,CAC5C,MAAOO,SAAQC,GAAR,CAAYT,gBAAgBC,UAAhB,CAAZ,CACV,CAFM,CAGV,CAnBa,CAAlB,CAsBA,MAAOR,UACV,CAxBY,EAAb,CA0BAiB,KAAKC,gBAAL,CAAsB,UAAtB,CAAkC,SAAUC,KAAV,CAAiB,CAC/CA,MAAMC,SAAN,CAAgBrB,IAAIE,cAApB,CACH,CAFD,CAGH,CAtCA,GAAD","file":"service-worker.js","sourcesContent":["(function () {\n    'use strict';\n\n    const CACHE_VERSION = 1;\n    const CURRENT_CACHES = {\n        resources: 'resources-v' + CACHE_VERSION,\n        data: 'data-v' + CACHE_VERSION\n    };\n\n    const app = (function () {\n        const appModule = {\n            deleteOldCache() {\n                const expectedCacheNames = Object.keys(CURRENT_CACHES).map(function (key) {\n                    return CURRENT_CACHES[key];\n                });\n\n                const deleteOldCaches = function (cacheNames) {\n                    return cacheNames.map(function (cacheName) {\n                        if (expectedCacheNames.indexOf(cacheName) === -1) {\n                            return caches.delete(cacheName);\n                        }\n\n                        return undefined;\n                    });\n                };\n\n                return caches.keys().then(function (cacheNames) {\n                    return Promise.all(deleteOldCaches(cacheNames));\n                });\n            }\n        };\n\n        return appModule;\n    }());\n\n    self.addEventListener('activate', function (event) {\n        event.waitUntil(app.deleteOldCache);\n    });\n}());\n"]}